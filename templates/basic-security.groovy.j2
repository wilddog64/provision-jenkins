#!groovy
import jenkins.*
import huson.*
import hudson.security.*
import jenkins.model.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import hudson.plugins.sshslaves.*;
import hudson.model.*
import jenkins.model.*
import hudson.security.*

def instance = Jenkins.getInstance()
instance.setNumExecutors(5)
instance.setSlaveAgentPort([55000])
println "--> Checking if security has been set already"

if (!instance.isUseSecurity()) {
    println "--> creating local user 'admin'"

    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount('{{ jenkins_admin_user }}', '{{ jenkins_admin_password }}')
    instance.setSecurityRealm(hudsonRealm)

    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    instance.setAuthorizationStrategy(strategy)
    instance.save()
}

// update user password
user = hudson.model.User.get("admin")
user.setFullName("dreambox admin")
password = hudson.security.HudsonPrivateSecurityRealm.Details.fromPlainPassword("{{ jenkins_admin_password }}")
user.addProperty(password)
user.save()

// load a list of credentials from jenkins and
// search result to see if user jenkins exists
def creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
    com.cloudbees.plugins.credentials.common.StandardUsernameCredentials.class,
	jenkins.model.Jenkins.instance,
	null,
	null
)
def found_credential = creds.findResult { it.username == "jenkins" ? it : null }

// create a global credential that bases on SSH key. The private key is created and managed by Ansible
if ( !found_credential ) {
   String keyfile = "{{ jenkins_sshkey_file }}"
   global_domain = Domain.global()
   credential_store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()
   credential = new BasicSSHUserPrivateKey(
       CredentialsScope.GLOBAL,
       null,
       "jenkins",
       new BasicSSHUserPrivateKey.FileOnMasterPrivateKeySource(keyfile),
       "{{ sshkey_passphrase }}",
       "Ansible Managed SSH credential"
   )
   credential_store.addCredentials(global_domain, credential)
}
